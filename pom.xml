<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>au.csiro.data61.aap</groupId>
  <artifactId>elf</artifactId>
  <version>0.2.1</version>
  <name>Ethereum Logging Framework</name>

  <properties>
    <java.version>13</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <antlr4.version>4.7.2</antlr4.version>
    <junit.jupiter.version>5.5.2</junit.jupiter.version>
    <junit.platform.version>1.5.2</junit.platform.version>
    <web3j.version>4.5.5</web3j.version>
    <logback-classic.version>1.2.3</logback-classic.version>
    <jackson.version>2.10.1</jackson.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>${junit.platform.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${antlr4.version}</version>
    </dependency>
    <dependency>
      <groupId>org.web3j</groupId>
      <artifactId>core</artifactId>
      <version>${web3j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.web3j</groupId>
      <artifactId>abi</artifactId>
      <version>${web3j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback-classic.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.deckfour</groupId>
      <artifactId>xes</artifactId>
      <version>1.0.0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/OpenXES-20181205.jar</systemPath>
    </dependency>
    <dependency>
      <!-- spex is needed for open xes -->
      <groupId>org.deckfour</groupId>
      <artifactId>Spex</artifactId>
      <version>1.0.0</version>
      <scope>system</scope>
      <systemPath>${project.basedir}/lib/Spex.jar</systemPath>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>2.0-M2-groovy-3.0</version>
      <scope>test</scope>
    </dependency>
    <!-- bytebuddy is used to mock non-interface types in tests -->
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>1.10.10</version>
      <scope>test</scope>
    </dependency>
    <!-- objenesis is used to bypass constructor when mocking -->
    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <version>3.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven 
        defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <showWarnings>true</showWarnings>
            <showDeprecation>true</showDeprecation>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
          <configuration>
            <includes>
              <include>**/*Spec.java</include>
            </includes>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
          <inherited>false</inherited>
          <executions>
            <execution>
              <id>install-xes</id>
              <goals>
                <goal>install-file</goal>
              </goals>
              <phase>process-resources</phase>
              <configuration>
                <groupId>org.deckfour</groupId>
                <artifactId>xes</artifactId>
                <version>1.0.0</version>
                <packaging>jar</packaging>
                <file>${basedir}/lib/OpenXES-20181205.jar</file>
                <generatePom>true</generatePom>
              </configuration>
            </execution>
            <execution>
              <id>install-spex</id>
              <configuration>
                <groupId>org.deckfour</groupId>
                <artifactId>Spex</artifactId>
                <version>1.0.0</version>
                <packaging>jar</packaging>
                <file>${basedir}/lib/Spex.jar</file>
                <generatePom>true</generatePom>
              </configuration>
              <goals>
                <goal>install-file</goal>
              </goals>
              <phase>process-resources</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.antlr</groupId>
          <artifactId>antlr4-maven-plugin</artifactId>
          <version>${antlr4.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${antlr4.version}</version>
        <configuration>
          <arguments>
            <argument>-visitor</argument>
          </arguments>
        </configuration>
        <executions>
          <execution>
            <id>antlr-generate</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>antlr4</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- The gmavenplus plugin is used to compile Groovy code. -->
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>1.9.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compileTests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>1.31.1</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <java>
            <eclipse>
              <file>.spotless/java.xml</file>
              <version>4.13.0</version>
            </eclipse>
          </java>
          <formats>
            <format>
              <includes>
                <include>*.xml</include>
              </includes>
              <eclipseWtp>
                <type>XML</type>
                <files>
                  <file>.spotless/xml.prefs</file>
                </files>
                <version>4.13.0</version>
              </eclipseWtp>
            </format>
          </formats>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <configuration>
              <testSources>
                <testSource>
                  <directory>src/it/groovy</directory>
                </testSource>
              </testSources>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.22.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.25.2</version>
            <executions>
              <execution>
                <id>start-ganache</id>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <images>
                    <image>
                      <name>trufflesuite/ganache-cli:v6.9.1</name>
                      <run>
                        <ports>
                          <port>8545:8545</port>
                        </ports>
                        <wait>
                          <log>Listening on 0.0.0.0:8545</log>
                        </wait>
                        <cmd>-b 5</cmd>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
              <execution>
                <id>stop-ganache</id>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
